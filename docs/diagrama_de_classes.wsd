@startuml
    title Diagrama de classes - Seller Management

    package Domain #DDDDDD {
        class Permission {
        - description : String
    }

    note bottom of Permission : Write \nRead \nUpdate \nDelete

    class User {
        - login : String 
        - email : String
        - permissions : List<Permission>
    }

    class Order {
        - client : Client
        - seller : Seller
        - items : List<Item>
    }

    class Client {
        - name
        - cnpj
        - active : Boolean
    }

    class Employee {
        - name : String
        - address : String
        - cpf : String
        - cnpj : String
        - celular : String

    }

    class Seller {
        
        getClients() : List<Client>
        getOrders() : List<Order>
    }

    class Manager {
        - sector : String
        getSellers() : List<Sellers>
        getClientsBySeller(seller : Seller) : List<Client>
    }

    class Administrator {
        saveSeller(seller : seller) : Seller
        saveManager(manager : Manager) : Manager
        changePermission(user : User) : Boolean
        getAllEmployees() : List<Employee>
        createAccount(employee : Employee) : Employee
    }

    class Item {
        - fabric : Fabric
        - quantity : Double
        - typeOfPackaging : Packaging
    }

    class Fabric {
        - code : String
        - description : String
    }

    Employee <|-- Seller #line:blue
    Employee <|-- Manager #line:blue
    Employee <|-- Administrator #line:blue
    Seller "1" --> "1" User #line:blue
    Manager "1" --> "1" User #line:blue
    Administrator "1" --> "1" User #line:blue
    
    User "*" --> "*" Permission #line:blue

    Seller "*" --> "1" Client #line:blue
    Seller "*" --> "1" Order #line:blue
    Order "*" --> "*" Item #line:blue
    Client "*" --> "1" Order #line:blue
}

package Controllers #DDDDDD {

    class SellerController{
        
    }
    class ManagerController {}
    class AdministratorController {}

}

package Processors #DDDDDD {

    interface ProcessorFactory {
        getProcessor()
        process()
    }

    class SellerProcessor{
        saveSeller()
    }
    class ManagerProcessor {
        saveManager()
    }
    class AdministratorProcessor {
        
    }

}

package Repositories #DDDDDD {

    class SellerRepository{}
    class ManagerRepository {}
    class AdministratorRepository {}

}

package SalesDb <<Database>> #LightBlue {
  
}

SellerProcessor --> SellerRepository
ManagerProcessor --> ManagerRepository
AdministratorProcessor --> AdministratorRepository

ProcessorFactory <.. SellerProcessor #line:blue
ProcessorFactory <.. ManagerProcessor #line:blue
ProcessorFactory <.. AdministratorProcessor #line:blue

SellerRepository --> SalesDb
ManagerRepository --> SalesDb
AdministratorRepository --> SalesDb

SellerController --> ProcessorFactory
ManagerController --> ProcessorFactory
AdministratorController --> ProcessorFactory
    
    
@enduml