name: Build
on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
jobs:
  docker:
    name: Build Seller Management
    timeout-minutes: 10
    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:latest
#        env:
#          POSTGRES_DB: NinjaFabricSaleDB
#          POSTGRES_PASSWORD: ${NINJA_DB_PASSWORD}
#          POSTGRES_USER: postgres
#        ports:
#          - 5432:5432
#        # Set health checks to wait until postgres has started
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Start containers
        working-directory: seller-management/
        run: docker-compose -f "docker-compose.yml" up -d --build
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Build and analyze
#        working-directory:
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build -Dspring.profiles.active=qa jacocoTestReport sonarqube --info
#        run: ./gradlew build -Dspring.profiles.active=qa jacocoTestReport
      - name: Stop containers
        working-directory: seller-management/
        if: always()
        run: docker-compose -f "docker-compose.yml" down
